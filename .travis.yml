---
dist: xenial
services:
  - docker

env:
#-----------------------------------------------
#
# CentOS
#
#-----------------------------------------------
  - distribution: centos-8
    playbook: sonar-scanner-3.3.0.1492
  - distribution: centos-7
    playbook: sonar-scanner-3.3.0.1492

#--------------------------------
#
# Fedora
#
#--------------------------------
  - distribution: fedora-31
    playbook: sonar-scanner-3.3.0.1492
  - distribution: fedora-30
    playbook: sonar-scanner-3.3.0.1492
  - distribution: fedora-29
    playbook: sonar-scanner-3.3.0.1492
  - distribution: fedora-28
    playbook: sonar-scanner-3.3.0.1492
  - distribution: fedora-27
    playbook: sonar-scanner-3.3.0.1492
  - distribution: fedora-26
    playbook: sonar-scanner-3.3.0.1492

#--------------------------------
#
# Ubuntu
#
#--------------------------------
  - distribution: ubuntu-19.04
    playbook: sonar-scanner-3.3.0.1492
  - distribution: ubuntu-18.04
    playbook: sonar-scanner-3.3.0.1492
  - distribution: ubuntu-16.04
    playbook: sonar-scanner-3.3.0.1492
  - distribution: ubuntu-14.04
    playbook: sonar-scanner-3.3.0.1492

#--------------------------------
#
# Debian
#
#--------------------------------
  - distribution: debian-10
    playbook: sonar-scanner-3.3.0.1492
  - distribution: debian-9
    playbook: sonar-scanner-3.3.0.1492
  - distribution: debian-8
    playbook: sonar-scanner-3.3.0.1492

#--------------------------------
#
# Oraclelinux
#
#--------------------------------
  - distribution: oraclelinux-8
    playbook: sonar-scanner-3.3.0.1492
  - distribution: oraclelinux-7
    playbook: sonar-scanner-3.3.0.1492

#--------------------------------
#
# Amazonlinux
#
#--------------------------------
  - distribution: amazonlinux-2
    playbook: sonar-scanner-3.3.0.1492

#--------------------------------
#
# Opensuse
#
#--------------------------------
  - distribution: opensuse-15.1
    playbook: sonar-scanner-3.3.0.1492
  - distribution: opensuse-15
    playbook: sonar-scanner-3.3.0.1492
  - distribution: opensuse-42.3
    playbook: sonar-scanner-3.3.0.1492
  - distribution: opensuse-42.2
    playbook: sonar-scanner-3.3.0.1492
  - distribution: opensuse-13.2
    playbook: sonar-scanner-3.3.0.1492

#--------------------------------
#
# Archlinux
#
#--------------------------------
  - distribution: archlinux-rolling
    playbook: sonar-scanner-3.3.0.1492

#--------------------------------
#
# Gentoo
#
#--------------------------------
  - distribution: gentoo-stage3
    playbook: sonar-scanner-3.3.0.1492

before_install:
  # Pull docker container
  - 'sudo docker pull diodonfrost/${distribution}-ansible:latest'

script:
  - container_id=$(mktemp)

  # Run container and mount ansible role with it
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/ansible-role-sonar-scanner:ro diodonfrost/${distribution}-ansible:latest > "${container_id}"'

  # Check syntax
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/ansible-role-sonar-scanner/tests/playbooks/${playbook}.yml --syntax-check'

  # Run ansible playbook
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/ansible-role-sonar-scanner/tests/playbooks/${playbook}.yml'

  # Test indempotence
  - >
    sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/ansible-role-sonar-scanner/tests/playbooks/${playbook}.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Test role
  - 'inspec exec tests/inspec --chef-license accept-silent -t docker://$(cat ${container_id})'

  # Delete container
  - 'sudo docker rm -f "$(cat ${container_id})"'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
